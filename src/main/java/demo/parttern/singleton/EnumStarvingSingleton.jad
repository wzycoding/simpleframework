// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   EnumStarvingSingleton.java

package demo.parttern.singleton;

import java.io.PrintStream;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;

public class EnumStarvingSingleton
{
    private static final class ContainerHolder extends Enum
    {

        public static ContainerHolder[] values()
        {
            return (ContainerHolder[])$VALUES.clone();
        }

        public static ContainerHolder valueOf(String s)
        {
            return (ContainerHolder)Enum.valueOf(demo/parttern/singleton/EnumStarvingSingleton$ContainerHolder, s);
        }

        public static final ContainerHolder HOLDER;
        private EnumStarvingSingleton instance;
        private static final ContainerHolder $VALUES[];

        static 
        {
            HOLDER = new ContainerHolder("HOLDER", 0);
            $VALUES = (new ContainerHolder[] {
                HOLDER
            });
        }


        private ContainerHolder(String s, int i)
        {
            super(s, i);
            instance = new EnumStarvingSingleton();
        }
    }


    private EnumStarvingSingleton()
    {
    }

    public static EnumStarvingSingleton getInstance()
    {
        return ContainerHolder.HOLDER.instance;
    }

    public static void main(String args[])
        throws NoSuchMethodException, IllegalAccessException, InvocationTargetException, InstantiationException
    {
        /*<invalid signature>*/java.lang.Object local = demo/parttern/singleton/EnumStarvingSingleton$ContainerHolder;
        Constructor constructor = local.getDeclaredConstructor(new Class[] {
            java/lang/String, Integer.TYPE
        });
        constructor.setAccessible(true);
        System.out.println(constructor.newInstance(new Object[0]));
        System.out.println(ContainerHolder.HOLDER.instance);
    }

}
